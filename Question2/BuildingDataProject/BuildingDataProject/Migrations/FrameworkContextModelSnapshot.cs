// <auto-generated />
using System;
using BuildingDataProject.Core.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BuildingDataProject.Migrations
{
    [DbContext(typeof(FrameworkContext))]
    partial class FrameworkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BuildingDataProject.Core.Entities.Building", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("BuildingDataProject.Core.Entities.DataField", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DataField");
                });

            modelBuilder.Entity("BuildingDataProject.Core.Entities.Object", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Objects");
                });

            modelBuilder.Entity("BuildingDataProject.Core.Entities.Reading", b =>
                {
                    b.Property<short>("BuildingId")
                        .HasColumnType("smallint");

                    b.Property<byte>("ObjectId")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DataFieldId")
                        .HasColumnType("tinyint");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasMaxLength(18)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BuildingId", "ObjectId", "DataFieldId");

                    b.HasIndex("DataFieldId");

                    b.HasIndex("ObjectId");

                    b.ToTable("Reading");
                });

            modelBuilder.Entity("BuildingDataProject.Core.Entities.Reading", b =>
                {
                    b.HasOne("BuildingDataProject.Core.Entities.Building", "Building")
                        .WithMany("Readings")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingDataProject.Core.Entities.DataField", "DataField")
                        .WithMany("Readings")
                        .HasForeignKey("DataFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingDataProject.Core.Entities.Object", "Object")
                        .WithMany("Readings")
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("DataField");

                    b.Navigation("Object");
                });

            modelBuilder.Entity("BuildingDataProject.Core.Entities.Building", b =>
                {
                    b.Navigation("Readings");
                });

            modelBuilder.Entity("BuildingDataProject.Core.Entities.DataField", b =>
                {
                    b.Navigation("Readings");
                });

            modelBuilder.Entity("BuildingDataProject.Core.Entities.Object", b =>
                {
                    b.Navigation("Readings");
                });
#pragma warning restore 612, 618
        }
    }
}
